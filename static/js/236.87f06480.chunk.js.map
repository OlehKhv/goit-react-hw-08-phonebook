{"version":3,"file":"static/js/236.87f06480.chunk.js","mappings":"8TAOMA,EACI,GADJA,EAEK,GAFLA,EAGQ,GAGDC,EAAe,WACxB,IAAAC,GAAwBC,EAAAA,EAAAA,UAASH,GAAmBI,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAASH,GAAoBS,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhDE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAASH,GAAuBa,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAMC,GAAC,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACL,OAAnBJ,EAAEK,iBAAiBH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGTZ,GAASc,EAAAA,EAAAA,IAAO,CAAExB,KAAAA,EAAMI,MAAAA,EAAOI,SAAAA,KAAaiB,SAAS,KAAD,EAC1DC,EAAAA,GAAAA,QAAc,WAADC,OAAY3B,IAAQoB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAQ,GAAAR,EAAA,SAEjCM,EAAAA,GAAAA,MAAY,8BAA8B,QAG9CG,IAAY,yBAAAT,EAAAU,OAAA,GAAAb,EAAA,kBACf,gBAXiBc,GAAA,OAAAlB,EAAAmB,MAAA,KAAAC,UAAA,KAaZJ,EAAY,WACd5B,EAAQP,GACRW,EAASX,GACTe,EAAYf,EAChB,EAEA,OACIwC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACAC,UAAU,OACVC,GAAI,CACA,kBAAmB,CACfC,EAAG,EACHC,MAAO,QACPC,SAAU,SAGlBC,YAAU,EACVC,SAAU9B,EAAa+B,SAAA,EAEvBC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACNC,UAAQ,EACRC,MAAM,YACNC,YAAY,YACZC,MAAOjD,EACPkD,SAAU,SAAAC,GAAiB,IAAdC,EAAMD,EAANC,OACTnD,EAAQmD,EAAOH,MACnB,KAEJL,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACNC,UAAQ,EACRC,MAAM,gBACNM,WAAW,gCACXL,YAAY,gBACZM,KAAK,QACLL,MAAO7C,EACP8C,SAAU,SAAAK,GAAiB,IAAdH,EAAMG,EAANH,OACT/C,EAAS+C,EAAOH,MACpB,KAEJL,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACNE,MAAM,WACNM,WAAW,iDACXL,YAAY,WACZM,KAAK,WACLL,MAAOzC,EACP0C,SAAU,SAAAM,GAAiB,IAAdJ,EAAMI,EAANJ,OACT3C,EAAY2C,EAAOH,MACvB,KAEJL,EAAAA,EAAAA,KAACa,EAAAA,EAAM,CAACC,QAAQ,WAAWJ,KAAK,SAASK,KAAK,QAAOhB,SAAC,aAGtDT,EAAAA,EAAAA,MAAC0B,EAAAA,EAAU,CAAAjB,SAAA,CAAC,kCACwB,KAChCC,EAAAA,EAAAA,KAACiB,EAAAA,GAAI,CAACC,GAAG,SAASC,UAAU,QAAOpB,SAAC,UAE7B,SAKvB,ECpFA,EARiB,WACb,OACIC,EAAAA,EAAAA,KAAA,WAAAD,UACIC,EAAAA,EAAAA,KAACjD,EAAY,KAGzB,C","sources":["components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { Box, Button, TextField, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { signUp } from 'redux/auth/thunks';\n\nconst INITIAL_STATE = {\n    name: '',\n    email: '',\n    password: '',\n};\n\nexport const RegisterForm = () => {\n    const [name, setName] = useState(INITIAL_STATE.name);\n    const [email, setEmail] = useState(INITIAL_STATE.email);\n    const [password, setPassword] = useState(INITIAL_STATE.password);\n\n    const dispatch = useDispatch();\n\n    const handleSignUp = async e => {\n        e.preventDefault();\n\n        try {\n            await dispatch(signUp({ name, email, password })).unwrap();\n            toast.success(`Welcome ${name}`);\n        } catch (error) {\n            toast.error('Invalid Email or Password ');\n        }\n\n        resetForm();\n    };\n\n    const resetForm = () => {\n        setName(INITIAL_STATE.name);\n        setEmail(INITIAL_STATE.email);\n        setPassword(INITIAL_STATE.password);\n    };\n\n    return (\n        <Box\n            component=\"form\"\n            sx={{\n                '& > :not(style)': {\n                    m: 1,\n                    width: '500px',\n                    maxWidth: '100%',\n                },\n            }}\n            noValidate\n            onSubmit={handleSignUp}\n        >\n            <TextField\n                required\n                label=\"Full name\"\n                placeholder=\"Alex Alex\"\n                value={name}\n                onChange={({ target }) => {\n                    setName(target.value);\n                }}\n            />\n            <TextField\n                required\n                label=\"Email address\"\n                helperText=\"We'll never share your email.\"\n                placeholder=\"mail@mail.com\"\n                type=\"email\"\n                value={email}\n                onChange={({ target }) => {\n                    setEmail(target.value);\n                }}\n            />\n            <TextField\n                label=\"Password\"\n                helperText=\"You should not share the password with anyone!\"\n                placeholder=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={({ target }) => {\n                    setPassword(target.value);\n                }}\n            />\n            <Button variant=\"outlined\" type=\"submit\" size=\"large\">\n                Sign up\n            </Button>\n            <Typography>\n                Already have an account? Please{' '}\n                <Link to=\"/login\" underline=\"hover\">\n                    login\n                </Link>\n                .\n            </Typography>\n        </Box>\n    );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n    return (\n        <section>\n            <RegisterForm />\n        </section>\n    );\n};\n\nexport default Register;\n"],"names":["INITIAL_STATE","RegisterForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","dispatch","useDispatch","handleSignUp","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","e","wrap","_context","prev","next","preventDefault","signUp","unwrap","toast","concat","t0","resetForm","stop","_x","apply","arguments","_jsxs","Box","component","sx","m","width","maxWidth","noValidate","onSubmit","children","_jsx","TextField","required","label","placeholder","value","onChange","_ref2","target","helperText","type","_ref3","_ref4","Button","variant","size","Typography","Link","to","underline"],"sourceRoot":""}