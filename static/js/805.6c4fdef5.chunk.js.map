{"version":3,"file":"static/js/805.6c4fdef5.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/ContactsList/Contacts.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","redux/contacts/selectors.js","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Notification/ErrorNotification.jsx","components/Notification/NotFoundNotification.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/Contacts.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const PhonebookForm = styled('form')(() => ({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: '40px',\n    borderBottom: '1px solid #507E52',\n}));\n\nexport const LabelInput = styled('label')(() => ({\n    color: '#171819',\n    fontSize: '28px',\n    fontWeight: '600',\n    marginBottom: '4px',\n}));\n\nexport const InputForm = styled('input')(() => ({\n    height: '40px',\n    width: '300px',\n    border: '1px solid #171819',\n    borderRadius: '8px',\n    marginBottom: '20px',\n    padding: '10px 30px',\n}));\n\nexport const ButtonAdd = styled('button')`\n    width: 300px;\n    height: 40px;\n    display: block;\n    margin-bottom: 40px;\n    border: 1px solid #171819;\n    border-radius: 8px;\n    font-size: 20px;\n    &:is(:hover, :focus) {\n        background-color: #57a0ea;\n    }\n`;\n","import { styled } from 'styled-components';\n\nexport const SecondTitle = styled('h3')(() => ({\n    color: '#171819',\n    marginBottom: '20px',\n    textAlign: 'center',\n}));\n\nexport const ContactItem = styled('li')(() => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '8px',\n}));\n\nexport const ContactText = styled('p')(() => ({\n    color: '#171819',\n    fontSize: '20px',\n    fontWeight: '600',\n}));\n\nexport const DeleteButton = styled('button')`\n    font-size: 12px;\n    border: 1px solid #171819;\n    border-radius: 8px;\n    padding: 8px 12px;\n    &:is(:hover, :focus) {\n        color: red;\n        border-color: red;\n    }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectFilter = state => state.filter.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, filter) =>\n        contacts.filter(({ name }) =>\n            name.toLowerCase().includes(filter.toLowerCase())\n        )\n);\n","import { styled } from 'styled-components';\n\nexport const NotificationText = styled('h4')(() => ({\n    color: '#424D55',\n    textAlign: 'center',\n    opacity: '0.6',\n}));\n\nexport const NotFoundNotificationText = styled(NotificationText)(() => ({\n    opacity: '1',\n}));\n\nexport const ErrorNotificationText = styled(NotFoundNotificationText)(() => ({\n    color: '#D61717',\n}));\n","import { NotificationText } from './Notification.styled';\n\nexport const Notification = ({ children }) => {\n    return <NotificationText>{children}</NotificationText>;\n};\n\nexport default Notification;\n","import { ErrorNotificationText } from './Notification.styled';\n\nexport const ErrorNotification = ({ children }) => {\n    return <ErrorNotificationText>{children}</ErrorNotificationText>;\n};\n","import { NotFoundNotificationText } from './Notification.styled';\n\nexport const NotFoundNotification = ({ children }) => {\n    return <NotFoundNotificationText>{children}</NotFoundNotificationText>;\n};\n","import {\n    ContactItem,\n    ContactText,\n    DeleteButton,\n    SecondTitle,\n} from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    selectContacts,\n    selectError,\n    selectFilteredContacts,\n    selectLoading,\n} from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/thunks';\nimport Loader from 'components/Loader/Loader';\nimport Notification from 'components/Notification/Notification';\nimport { ErrorNotification } from 'components/Notification/ErrorNotification';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { NotFoundNotification } from 'components/Notification/NotFoundNotification';\n\nexport const ContactsList = () => {\n    const dispatch = useDispatch();\n\n    const contacts = useSelector(selectContacts);\n    const visibleContacts = useSelector(selectFilteredContacts);\n    const error = useSelector(selectError);\n    const isLoading = useSelector(selectLoading);\n    const filter = useSelector(selectFilter);\n\n    return (\n        <div>\n            <SecondTitle>Contacts</SecondTitle>\n\n            {isLoading && <Loader />}\n\n            {!error && !isLoading && visibleContacts.length > 0 && (\n                <ul>\n                    {visibleContacts.map(({ id, name, number }) => {\n                        return (\n                            <ContactItem key={id}>\n                                <ContactText>\n                                    🧑 {name}: {number}\n                                </ContactText>\n                                <DeleteButton\n                                    onClick={() => {\n                                        dispatch(deleteContact(id));\n                                    }}\n                                >\n                                    ❌ Delete\n                                </DeleteButton>\n                            </ContactItem>\n                        );\n                    })}\n                </ul>\n            )}\n\n            {!error && !isLoading && contacts.length === 0 && (\n                <Notification>Your phone book is empty!</Notification>\n            )}\n\n            {error && !isLoading && (\n                <ErrorNotification>\n                    Oops... Something went wrong. Error: {error}. Please, try\n                    again.\n                </ErrorNotification>\n            )}\n\n            {filter && !isLoading && visibleContacts.length === 0 && (\n                <NotFoundNotification>\n                    No contacts matching your search query: \"{filter}\". Please\n                    change your search parameters and try again.\n                </NotFoundNotification>\n            )}\n        </div>\n    );\n};\n","import { styled } from 'styled-components';\n\nexport const FilterField = styled('div')(() => ({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: '40px',\n}));\n\nexport const LabelSearchInput = styled('label')(() => ({\n    color: '#171819',\n    fontSize: '20px',\n    fontWeight: '600',\n    marginBottom: '8px',\n}));\n","import { InputForm } from '../Form/Form.styled';\nimport { FilterField, LabelSearchInput } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/slice';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <FilterField>\n            <LabelSearchInput htmlFor=\"filter\">\n                🔍Search contact\n            </LabelSearchInput>\n            <InputForm\n                name=\"filter\"\n                id=\"filter\"\n                type=\"text\"\n                placeholder=\"🙍‍♂️   Enter name\"\n                onChange={({ target: { value } }) => {\n                    dispatch(setFilter(value));\n                }}\n            />\n        </FilterField>\n    );\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport { ButtonAdd, InputForm, LabelInput, PhonebookForm } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/thunks';\n\nconst INITIAL_STATE = {\n    name: '',\n    number: '',\n};\n\nexport const Form = () => {\n    const [name, setName] = useState(INITIAL_STATE.name);\n    const [number, setNumber] = useState(INITIAL_STATE.number);\n\n    const dispatch = useDispatch();\n\n    const contacts = useSelector(selectContacts);\n\n    const handleInput = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'phone':\n                setNumber(value);\n                break;\n            // no default\n        }\n    };\n\n    const handleAddContact = e => {\n        e.preventDefault();\n\n        if (contacts.some(contact => contact.name === name)) {\n            alert(`${name} is already in contacts!`);\n            resetForm();\n            return;\n        }\n\n        dispatch(addContact({ name, number }));\n\n        resetForm();\n    };\n\n    const resetForm = () => {\n        setName(INITIAL_STATE.name);\n        setNumber(INITIAL_STATE.number);\n    };\n\n    return (\n        <PhonebookForm onSubmit={handleAddContact}>\n            <LabelInput htmlFor=\"name\">Name</LabelInput>\n            <InputForm\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={handleInput}\n                id=\"name\"\n                placeholder=\"🙍‍♂️   Alex Smith\"\n            />\n\n            <LabelInput htmlFor=\"phone\">Number</LabelInput>\n            <InputForm\n                type=\"tel\"\n                name=\"phone\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={handleInput}\n                id=\"phone\"\n                placeholder=\"📞   222-22-22\"\n            />\n\n            <ButtonAdd type=\"submit\">➕ Add contact</ButtonAdd>\n        </PhonebookForm>\n    );\n};\n\nexport default Form;\n","import { ContactsList } from 'components/ContactsList/ContactsList';\nimport Filter from 'components/Filter/Filter';\nimport Form from 'components/Form/Form';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchAllContacts } from 'redux/contacts/thunks';\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchAllContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <section>\n                <Form />\n            </section>\n            <section>\n                <Filter />\n            </section>\n            <section>\n                <ContactsList />\n            </section>\n        </>\n    );\n};\n\nexport default Contacts;\n"],"names":["PhonebookForm","styled","display","flexDirection","alignItems","marginBottom","borderBottom","LabelInput","color","fontSize","fontWeight","InputForm","height","width","border","borderRadius","padding","ButtonAdd","_templateObject","_taggedTemplateLiteral","SecondTitle","textAlign","ContactItem","justifyContent","ContactText","DeleteButton","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","filter","selectContacts","contacts","items","selectError","error","selectLoading","isLoading","selectFilteredContacts","_ref","toLowerCase","includes","NotificationText","opacity","NotFoundNotificationText","ErrorNotificationText","children","_jsx","ErrorNotification","NotFoundNotification","ContactsList","dispatch","useDispatch","useSelector","visibleContacts","_jsxs","Loader","id","number","onClick","deleteContact","Notification","FilterField","LabelSearchInput","htmlFor","type","placeholder","onChange","target","setFilter","INITIAL_STATE","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleInput","_ref$target","resetForm","onSubmit","e","preventDefault","some","contact","alert","addContact","pattern","title","required","useEffect","fetchAllContacts","_Fragment","Form","Filter"],"sourceRoot":""}