{"version":3,"file":"static/js/236.91c85bf3.chunk.js","mappings":"+QAEaA,GAAgBC,EAAAA,EAAAA,IAAO,OAAPA,EAAe,iBAAO,CAC/CC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,aAAc,OACdC,aAAc,oBACjB,IAEYC,GAAaN,EAAAA,EAAAA,IAAO,QAAPA,EAAgB,iBAAO,CAC7CO,MAAO,UACPC,SAAU,OACVC,WAAY,MACZL,aAAc,MACjB,IAEYM,GAAYV,EAAAA,EAAAA,IAAO,QAAPA,EAAgB,iBAAO,CAC5CW,OAAQ,OACRC,MAAO,QACPC,OAAQ,oBACRC,aAAc,MACdV,aAAc,OACdW,QAAS,YACZ,IAEYC,GAAYhB,EAAAA,EAAAA,IAAO,SAAPA,CAAgBiB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oP,mIChBnCC,EACI,GADJA,EAEK,GAFLA,EAGQ,GAgFd,EA7EqB,WACjB,IAAAC,GAAwBC,EAAAA,EAAAA,UAASF,GAAmBG,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7CI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAASF,GAAoBQ,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhDE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAASF,GAAuBY,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,GAAWC,EAAAA,EAAAA,MAEXC,EAAc,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUf,EAAIc,EAAJd,KAAMgB,EAAKF,EAALE,MACnC,OAAQhB,GACJ,IAAK,OACDC,EAAQe,GACR,MAEJ,IAAK,QACDX,EAASW,GACT,MAEJ,IAAK,WACDP,EAAYO,GAIxB,EAUMC,EAAY,WACdhB,EAAQN,GACRU,EAASV,GACTc,EAAYd,EAChB,EAEA,OACIuB,EAAAA,EAAAA,MAAC3C,EAAAA,GAAa,CAAC4C,SAfE,SAAAC,GACjBA,EAAEC,iBAEFX,GAASY,EAAAA,EAAAA,IAAO,CAAEtB,KAAAA,EAAMI,MAAAA,EAAOI,SAAAA,KAE/BS,GACJ,EAS0CM,SAAA,EAClCC,EAAAA,EAAAA,KAAC1C,EAAAA,GAAU,CAAC2C,QAAQ,OAAMF,SAAC,UAC3BC,EAAAA,EAAAA,KAACtC,EAAAA,GAAS,CACNwC,KAAK,OACL1B,KAAK,OACL2B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRb,MAAOhB,EACP8B,SAAUlB,EACVmB,GAAG,OACHC,YAAY,iDAEhBR,EAAAA,EAAAA,KAAC1C,EAAAA,GAAU,CAAC2C,QAAQ,QAAOF,SAAC,WAC5BC,EAAAA,EAAAA,KAACtC,EAAAA,GAAS,CACNwC,KAAK,QACL1B,KAAK,QACL6B,UAAQ,EACRb,MAAOZ,EACP0B,SAAUlB,EACVmB,GAAG,QACHC,YAAY,mBAEhBR,EAAAA,EAAAA,KAAC1C,EAAAA,GAAU,CAAC2C,QAAQ,WAAUF,SAAC,cAC/BC,EAAAA,EAAAA,KAACtC,EAAAA,GAAS,CACNwC,KAAK,WACL1B,KAAK,WACL6B,UAAQ,EACRb,MAAOR,EACPsB,SAAUlB,EACVmB,GAAG,WACHC,YAAY,cAEhBR,EAAAA,EAAAA,KAAChC,EAAAA,GAAS,CAACkC,KAAK,SAAQH,SAAC,cAGrC,ECjFA,EARiB,WACb,OACIC,EAAAA,EAAAA,KAAA,WAAAD,UACIC,EAAAA,EAAAA,KAACS,EAAY,KAGzB,C","sources":["components/Form/Form.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const PhonebookForm = styled('form')(() => ({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: '40px',\n    borderBottom: '1px solid #507E52',\n}));\n\nexport const LabelInput = styled('label')(() => ({\n    color: '#171819',\n    fontSize: '28px',\n    fontWeight: '600',\n    marginBottom: '4px',\n}));\n\nexport const InputForm = styled('input')(() => ({\n    height: '40px',\n    width: '300px',\n    border: '1px solid #171819',\n    borderRadius: '8px',\n    marginBottom: '20px',\n    padding: '10px 30px',\n}));\n\nexport const ButtonAdd = styled('button')`\n    width: 300px;\n    height: 40px;\n    display: block;\n    margin-bottom: 40px;\n    border: 1px solid #171819;\n    border-radius: 8px;\n    font-size: 20px;\n    &:is(:hover, :focus) {\n        background-color: #57a0ea;\n    }\n`;\n","import {\n    ButtonAdd,\n    InputForm,\n    LabelInput,\n    PhonebookForm,\n} from 'components/Form/Form.styled';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from 'redux/auth/thunks';\n\nconst INITIAL_STATE = {\n    name: '',\n    email: '',\n    password: '',\n};\n\nconst RegisterForm = () => {\n    const [name, setName] = useState(INITIAL_STATE.name);\n    const [email, setEmail] = useState(INITIAL_STATE.email);\n    const [password, setPassword] = useState(INITIAL_STATE.password);\n\n    const dispatch = useDispatch();\n\n    const handleInput = ({ target: { name, value } }) => {\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n\n            case 'email':\n                setEmail(value);\n                break;\n\n            case 'password':\n                setPassword(value);\n                break;\n            // no default\n        }\n    };\n\n    const handleSignup = e => {\n        e.preventDefault();\n\n        dispatch(signUp({ name, email, password }));\n\n        resetForm();\n    };\n\n    const resetForm = () => {\n        setName(INITIAL_STATE.name);\n        setEmail(INITIAL_STATE.email);\n        setPassword(INITIAL_STATE.password);\n    };\n\n    return (\n        <PhonebookForm onSubmit={handleSignup}>\n            <LabelInput htmlFor=\"name\">Name</LabelInput>\n            <InputForm\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n                value={name}\n                onChange={handleInput}\n                id=\"name\"\n                placeholder=\"🙍‍♂️   Alex Smith\"\n            />\n            <LabelInput htmlFor=\"email\">Email</LabelInput>\n            <InputForm\n                type=\"email\"\n                name=\"email\"\n                required\n                value={email}\n                onChange={handleInput}\n                id=\"email\"\n                placeholder=\"mail@mail.com\"\n            />\n            <LabelInput htmlFor=\"password\">Password</LabelInput>\n            <InputForm\n                type=\"password\"\n                name=\"password\"\n                required\n                value={password}\n                onChange={handleInput}\n                id=\"password\"\n                placeholder=\"password\"\n            />\n            <ButtonAdd type=\"submit\">Sing in</ButtonAdd>\n        </PhonebookForm>\n    );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n    return (\n        <section>\n            <RegisterForm />\n        </section>\n    );\n};\n\nexport default Register;\n"],"names":["PhonebookForm","styled","display","flexDirection","alignItems","marginBottom","borderBottom","LabelInput","color","fontSize","fontWeight","InputForm","height","width","border","borderRadius","padding","ButtonAdd","_templateObject","_taggedTemplateLiteral","INITIAL_STATE","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","dispatch","useDispatch","handleInput","_ref","_ref$target","target","value","resetForm","_jsxs","onSubmit","e","preventDefault","signUp","children","_jsx","htmlFor","type","pattern","title","required","onChange","id","placeholder","RegisterForm"],"sourceRoot":""}